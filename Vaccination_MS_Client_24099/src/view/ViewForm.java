/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;




import javax.swing.JTable;
import com.mysql.cj.protocol.Resultset;
import static com.sun.xml.internal.fastinfoset.alphabet.BuiltInRestrictedAlphabets.table;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.Iterator;

import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;

import javax.swing.table.DefaultTableModel;

import model.Patient;
import org.dom4j.Document;
import service.PatientInterface;

/**
 *
 * @author Mugisha
 */
public class ViewForm extends javax.swing.JFrame {
    DefaultTableModel tablemodel=new DefaultTableModel();
    
    /**
     * Creates new form ViewForm
     */
    public ViewForm() {
        initComponents();
        showColumns();
       addRowsToTable();
    }
private void showColumns(){

    tablemodel.addColumn("ID");
    tablemodel.addColumn("FirstName");
    tablemodel.addColumn("LastName");
    tablemodel.addColumn("Sex");
    tablemodel.addColumn("Age");
    tablemodel.addColumn("Vaccine");
    tablemodel.addColumn("Dose");
    tablemodel.addColumn("Date of Vaccination");
    
    ViewDataTable.setModel(tablemodel);
}

private void search(){
   
}

private void addRowsToTable() {
    try {
        Registry registry = LocateRegistry.getRegistry("127.0.0.1", 6000);
        PatientInterface service = (PatientInterface) registry.lookup("patient");
       
       List<Patient> patList = service.retrievePatient();
  
   for(Patient pat:patList){

       tablemodel.addRow(new Object[]{
       pat.getPatient_id(),
       pat.getFname(),
       pat.getLname(),
       pat.getSex(),
       pat.getAge(),
       pat.getVaccine(),
       pat.getDose(),
       pat.getDate()
   });
   }
    } catch (Exception ex) {
        ex.printStackTrace();
    }
}



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ViewDataTable = new javax.swing.JTable();
        goToDashBoard = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        txtDelete = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        RefreshButn = new javax.swing.JButton();
        download = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("PATIENT RECORDS");

        ViewDataTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        ViewDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ViewDataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ViewDataTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ViewDataTable);

        goToDashBoard.setBackground(new java.awt.Color(204, 204, 255));
        goToDashBoard.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        goToDashBoard.setIcon(new javax.swing.ImageIcon("D:\\SEMESTER SIX\\Java\\MIDSEM PROJECT\\icons\\dash.png")); // NOI18N
        goToDashBoard.setText("Dashboard");
        goToDashBoard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goToDashBoardActionPerformed(evt);
            }
        });

        deleteBtn.setText("DELETE");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        txtDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeleteActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Enter ID ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Search ID");

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        searchBtn.setText("SEARCH");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        RefreshButn.setText("REFRESH");
        RefreshButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButnActionPerformed(evt);
            }
        });

        download.setText("Download File");
        download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(RefreshButn, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                                    .addComponent(deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(goToDashBoard)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(283, 283, 283)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(128, 128, 128)
                                        .addComponent(jLabel2)))))
                        .addGap(15, 15, 15))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(download)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchBtn)))
                    .addComponent(goToDashBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RefreshButn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(download)
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void goToDashBoardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goToDashBoardActionPerformed
        // TODO add your handling code here:
        dispose();
        DashBoard dash=new DashBoard();
        dash.setVisible(true);
    }//GEN-LAST:event_goToDashBoardActionPerformed

    private void ViewDataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewDataTableMouseClicked
       //Sending data from table to txtDeleteTextfield
      
        int rowSelected=ViewDataTable.getSelectedRow();
       txtDelete.setText(tablemodel.getValueAt(rowSelected, 0).toString());

    }//GEN-LAST:event_ViewDataTableMouseClicked

      

    private void txtDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDeleteActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
    tablemodel.setRowCount(0);
    ViewDataTable.removeAll();
    try{
       Registry registry=LocateRegistry.getRegistry("127.0.0.7",6000);
       PatientInterface service=(PatientInterface) registry.lookup("patient");
       int id=Integer.parseInt(txtSearch.getText());
       Patient patt=new Patient();
       patt.setPatient_id(id);
       Patient pat= (Patient) service.searchById(patt);
      
       tablemodel.addRow(new Object[]{
       pat.getPatient_id(),
       pat.getFname(),
       pat.getLname(),
       pat.getSex(),
       pat.getAge(),
       pat.getVaccine(),
       pat.getDose(),
       pat.getDate()
   
   });
   ViewDataTable.setModel(tablemodel);
    }catch(Exception ex){
    ex.printStackTrace();
    }
   
    }//GEN-LAST:event_searchBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
      int choice= JOptionPane.showConfirmDialog(null, "Are you sure you want to delete?","Delete",JOptionPane.WARNING_MESSAGE,JOptionPane.YES_NO_OPTION);
        
       if(choice==JOptionPane.YES_OPTION){
       try{
       Registry registry=LocateRegistry.getRegistry("127.0.0.7",6000);
       PatientInterface service=(PatientInterface) registry.lookup("patient");
       int id=Integer.parseInt(txtDelete.getText());
       
       Patient pat=new Patient();
        pat.setPatient_id(id);
        
        String feedback=service.deletePatient(pat);
        JOptionPane.showMessageDialog(this, feedback);
        RefreshButnActionPerformed(evt);
       }catch(Exception ex){
       ex.printStackTrace();
       }
           
           
       
       }else{
           RefreshButnActionPerformed(evt);
       }
        
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void RefreshButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButnActionPerformed
        // TODO add your handling code here:
        tablemodel.setRowCount(0);
        ViewDataTable.removeAll();
         addRowsToTable();
          txtSearch.setText("");
          txtDelete.setText("");
        
        
    }//GEN-LAST:event_RefreshButnActionPerformed

    private void downloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadActionPerformed
  
        try{
        ViewDataTable.print();
        }catch(Exception ex){
        ex.printStackTrace();
        }
        
        /*
            String path="";
            JFileChooser j=new JFileChooser();
            j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            int x=j.showSaveDialog(this);
            
            if(x==JFileChooser.APPROVE_OPTION)
            {
            path=j.getSelectedFile().getPath();
            }
         
         // Create a new document
        Document document = new Document();

        try {
           
            // Set the output file path
            PdfWriter.getInstance(document, new FileOutputStream(path+"report.pdf"));

            // Open the document
            document.open();
              document.add(new Paragraph("List of Vaccinated Patients"));
            // Create a PDF table and set the number of columns
            PdfPTable pdfTable = new PdfPTable(ViewDataTable.getColumnCount());

            // Add table headers
            for (int i = 0; i < ViewDataTable.getColumnCount(); i++) {
                pdfTable.addCell(ViewDataTable.getColumnName(i));
            }

            // Add table rows
            for (int row = 0; row < ViewDataTable.getRowCount(); row++) {
                for (int col = 0; col < ViewDataTable.getColumnCount(); col++) {
                    pdfTable.addCell(ViewDataTable.getValueAt(row, col).toString());
                }
            }

            // Add the PDF table to the document
            document.add(pdfTable);
            JOptionPane.showMessageDialog(this, "File Downloaded Successfully","INFORMATION",JOptionPane.INFORMATION_MESSAGE);

            // Close the document
            document.close();

            System.out.println("PDF report generated successfully.");
        } catch (DocumentException | FileNotFoundException e) {
            e.printStackTrace();
        }

*/
    }//GEN-LAST:event_downloadActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton RefreshButn;
    private javax.swing.JTable ViewDataTable;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton download;
    private javax.swing.JButton goToDashBoard;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField txtDelete;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

  private String generateUniqueFilePath() {
         //To change body of generated methods, choose Tools | Templates.
//         String timestamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date());
//int counterValue = exportCounter.getAndIncrement();
    //String fileName = "excutives_" +counterValue+ ".csv";
  //  String filePath = "C:\\Users\\Mugisha\\Documents\\Tests" + fileName;
    return null;//filePath;
    
  }
}
